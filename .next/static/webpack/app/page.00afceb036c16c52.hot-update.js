"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/elevenlabsService.ts":
/*!*******************************************!*\
  !*** ./src/services/elevenlabsService.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateSpeech: function() { return /* binding */ generateSpeech; },\n/* harmony export */   playAudio: function() { return /* binding */ playAudio; },\n/* harmony export */   speakText: function() { return /* binding */ speakText; },\n/* harmony export */   speakTextWithCache: function() { return /* binding */ speakTextWithCache; }\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"(app-pages-browser)/./src/config.ts\");\n/* __next_internal_client_entry_do_not_use__ generateSpeech,playAudio,speakText,speakTextWithCache auto */ /**\n * ElevenLabs API Service - Client-side\n * Uses a server-side API route to protect the API key\n */ \n/**\n * Generate speech from text using the server API\n * @param options - Text-to-speech options\n * @returns Promise with audio blob\n */ const generateSpeech = async (param)=>{\n    let { text, voiceId = _config__WEBPACK_IMPORTED_MODULE_0__.ELEVENLABS_CONFIG.ITALIAN_VOICE_ID, modelId = _config__WEBPACK_IMPORTED_MODULE_0__.ELEVENLABS_CONFIG.MODEL_ID, stability = _config__WEBPACK_IMPORTED_MODULE_0__.ELEVENLABS_CONFIG.STABILITY, similarityBoost = _config__WEBPACK_IMPORTED_MODULE_0__.ELEVENLABS_CONFIG.SIMILARITY_BOOST } = param;\n    try {\n        const response = await fetch(\"/api/text-to-speech\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                text,\n                voiceId,\n                modelId,\n                stability,\n                similarityBoost\n            })\n        });\n        if (!response.ok) {\n            let errorMessage = \"Failed to generate speech\";\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.error || errorMessage;\n            } catch (e) {\n            // If parsing JSON fails, use the default error message\n            }\n            throw new Error(errorMessage);\n        }\n        return await response.blob();\n    } catch (error) {\n        console.error(\"Error generating speech:\", error);\n        throw error;\n    }\n};\n/**\n * Play audio from a blob\n * @param audioBlob - The audio blob to play\n * @returns Promise with the Audio element\n */ const playAudio = (audioBlob)=>{\n    return new Promise((resolve, reject)=>{\n        const audioUrl = URL.createObjectURL(audioBlob);\n        const audio = new Audio(audioUrl);\n        audio.onended = ()=>{\n            URL.revokeObjectURL(audioUrl); // Clean up the URL object\n            resolve(audio);\n        };\n        audio.onerror = (error)=>{\n            URL.revokeObjectURL(audioUrl);\n            reject(error);\n        };\n        audio.play().catch(reject);\n    });\n};\n/**\n * Generate and play speech from text\n * @param text - The text to convert to speech\n * @returns Promise that resolves when audio finishes playing\n */ const speakText = async (text)=>{\n    try {\n        const audioBlob = await generateSpeech({\n            text\n        });\n        await playAudio(audioBlob);\n    } catch (error) {\n        console.error(\"Error speaking text:\", error);\n        throw error;\n    }\n};\n/**\n * Cache for storing generated audio to avoid repeated API calls\n */ const audioCache = {};\n/**\n * Generate and play speech with caching\n * @param text - The text to convert to speech\n * @returns Promise that resolves when audio finishes playing\n */ const speakTextWithCache = async (text)=>{\n    try {\n        // Check if we already have this audio in cache\n        if (!audioCache[text]) {\n            audioCache[text] = await generateSpeech({\n                text\n            });\n        }\n        await playAudio(audioCache[text]);\n    } catch (error) {\n        console.error(\"Error speaking text with cache:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9lbGV2ZW5sYWJzU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OzsyR0FFQTs7O0NBR0MsR0FFNkM7QUFhOUM7Ozs7Q0FJQyxHQUNNLE1BQU1DLGlCQUFpQjtRQUFPLEVBQ25DQyxJQUFJLEVBQ0pDLFVBQVVILHNEQUFpQkEsQ0FBQ0ksZ0JBQWdCLEVBQzVDQyxVQUFVTCxzREFBaUJBLENBQUNNLFFBQVEsRUFDcENDLFlBQVlQLHNEQUFpQkEsQ0FBQ1EsU0FBUyxFQUN2Q0Msa0JBQWtCVCxzREFBaUJBLENBQUNVLGdCQUFnQixFQUN6QztJQUNYLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sdUJBQXVCO1lBQ2xEQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJmO2dCQUNBQztnQkFDQUU7Z0JBQ0FFO2dCQUNBRTtZQUNGO1FBQ0Y7UUFFQSxJQUFJLENBQUNFLFNBQVNPLEVBQUUsRUFBRTtZQUNoQixJQUFJQyxlQUFlO1lBQ25CLElBQUk7Z0JBQ0YsTUFBTUMsWUFBWSxNQUFNVCxTQUFTVSxJQUFJO2dCQUNyQ0YsZUFBZUMsVUFBVUUsS0FBSyxJQUFJSDtZQUNwQyxFQUFFLE9BQU9JLEdBQUc7WUFDVix1REFBdUQ7WUFDekQ7WUFDQSxNQUFNLElBQUlDLE1BQU1MO1FBQ2xCO1FBRUEsT0FBTyxNQUFNUixTQUFTYyxJQUFJO0lBQzVCLEVBQUUsT0FBT0gsT0FBTztRQUNkSSxRQUFRSixLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxNQUFNQTtJQUNSO0FBQ0YsRUFBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNSyxZQUFZLENBQUNDO0lBQ3hCLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMzQixNQUFNQyxXQUFXQyxJQUFJQyxlQUFlLENBQUNOO1FBQ3JDLE1BQU1PLFFBQVEsSUFBSUMsTUFBTUo7UUFFeEJHLE1BQU1FLE9BQU8sR0FBRztZQUNkSixJQUFJSyxlQUFlLENBQUNOLFdBQVcsMEJBQTBCO1lBQ3pERixRQUFRSztRQUNWO1FBRUFBLE1BQU1JLE9BQU8sR0FBRyxDQUFDakI7WUFDZlcsSUFBSUssZUFBZSxDQUFDTjtZQUNwQkQsT0FBT1Q7UUFDVDtRQUVBYSxNQUFNSyxJQUFJLEdBQUdDLEtBQUssQ0FBQ1Y7SUFDckI7QUFDRixFQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1XLFlBQVksT0FBT3hDO0lBQzlCLElBQUk7UUFDRixNQUFNMEIsWUFBWSxNQUFNM0IsZUFBZTtZQUFFQztRQUFLO1FBQzlDLE1BQU15QixVQUFVQztJQUNsQixFQUFFLE9BQU9OLE9BQU87UUFDZEksUUFBUUosS0FBSyxDQUFDLHdCQUF3QkE7UUFDdEMsTUFBTUE7SUFDUjtBQUNGLEVBQUU7QUFFRjs7Q0FFQyxHQUNELE1BQU1xQixhQUFtQyxDQUFDO0FBRTFDOzs7O0NBSUMsR0FDTSxNQUFNQyxxQkFBcUIsT0FBTzFDO0lBQ3ZDLElBQUk7UUFDRiwrQ0FBK0M7UUFDL0MsSUFBSSxDQUFDeUMsVUFBVSxDQUFDekMsS0FBSyxFQUFFO1lBQ3JCeUMsVUFBVSxDQUFDekMsS0FBSyxHQUFHLE1BQU1ELGVBQWU7Z0JBQUVDO1lBQUs7UUFDakQ7UUFFQSxNQUFNeUIsVUFBVWdCLFVBQVUsQ0FBQ3pDLEtBQUs7SUFDbEMsRUFBRSxPQUFPb0IsT0FBTztRQUNkSSxRQUFRSixLQUFLLENBQUMsbUNBQW1DQTtRQUNqRCxNQUFNQTtJQUNSO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvZWxldmVubGFic1NlcnZpY2UudHM/M2Y1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLyoqXG4gKiBFbGV2ZW5MYWJzIEFQSSBTZXJ2aWNlIC0gQ2xpZW50LXNpZGVcbiAqIFVzZXMgYSBzZXJ2ZXItc2lkZSBBUEkgcm91dGUgdG8gcHJvdGVjdCB0aGUgQVBJIGtleVxuICovXG5cbmltcG9ydCB7IEVMRVZFTkxBQlNfQ09ORklHIH0gZnJvbSBcIi4uL2NvbmZpZ1wiO1xuXG4vKipcbiAqIEludGVyZmFjZSBmb3IgdGV4dC10by1zcGVlY2ggcmVxdWVzdCBvcHRpb25zXG4gKi9cbmludGVyZmFjZSBUVFNPcHRpb25zIHtcbiAgdGV4dDogc3RyaW5nO1xuICB2b2ljZUlkPzogc3RyaW5nO1xuICBtb2RlbElkPzogc3RyaW5nO1xuICBzdGFiaWxpdHk/OiBudW1iZXI7XG4gIHNpbWlsYXJpdHlCb29zdD86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSBzcGVlY2ggZnJvbSB0ZXh0IHVzaW5nIHRoZSBzZXJ2ZXIgQVBJXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRleHQtdG8tc3BlZWNoIG9wdGlvbnNcbiAqIEByZXR1cm5zIFByb21pc2Ugd2l0aCBhdWRpbyBibG9iXG4gKi9cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVNwZWVjaCA9IGFzeW5jICh7XG4gIHRleHQsXG4gIHZvaWNlSWQgPSBFTEVWRU5MQUJTX0NPTkZJRy5JVEFMSUFOX1ZPSUNFX0lELFxuICBtb2RlbElkID0gRUxFVkVOTEFCU19DT05GSUcuTU9ERUxfSUQsXG4gIHN0YWJpbGl0eSA9IEVMRVZFTkxBQlNfQ09ORklHLlNUQUJJTElUWSxcbiAgc2ltaWxhcml0eUJvb3N0ID0gRUxFVkVOTEFCU19DT05GSUcuU0lNSUxBUklUWV9CT09TVCxcbn06IFRUU09wdGlvbnMpOiBQcm9taXNlPEJsb2I+ID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2FwaS90ZXh0LXRvLXNwZWVjaFwiLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHRleHQsXG4gICAgICAgIHZvaWNlSWQsXG4gICAgICAgIG1vZGVsSWQsXG4gICAgICAgIHN0YWJpbGl0eSxcbiAgICAgICAgc2ltaWxhcml0eUJvb3N0LFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBsZXQgZXJyb3JNZXNzYWdlID0gXCJGYWlsZWQgdG8gZ2VuZXJhdGUgc3BlZWNoXCI7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIGVycm9yTWVzc2FnZSA9IGVycm9yRGF0YS5lcnJvciB8fCBlcnJvck1lc3NhZ2U7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIElmIHBhcnNpbmcgSlNPTiBmYWlscywgdXNlIHRoZSBkZWZhdWx0IGVycm9yIG1lc3NhZ2VcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgIH1cblxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGdlbmVyYXRpbmcgc3BlZWNoOlwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8qKlxuICogUGxheSBhdWRpbyBmcm9tIGEgYmxvYlxuICogQHBhcmFtIGF1ZGlvQmxvYiAtIFRoZSBhdWRpbyBibG9iIHRvIHBsYXlcbiAqIEByZXR1cm5zIFByb21pc2Ugd2l0aCB0aGUgQXVkaW8gZWxlbWVudFxuICovXG5leHBvcnQgY29uc3QgcGxheUF1ZGlvID0gKGF1ZGlvQmxvYjogQmxvYik6IFByb21pc2U8SFRNTEF1ZGlvRWxlbWVudD4gPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IGF1ZGlvVXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChhdWRpb0Jsb2IpO1xuICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKGF1ZGlvVXJsKTtcblxuICAgIGF1ZGlvLm9uZW5kZWQgPSAoKSA9PiB7XG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKGF1ZGlvVXJsKTsgLy8gQ2xlYW4gdXAgdGhlIFVSTCBvYmplY3RcbiAgICAgIHJlc29sdmUoYXVkaW8pO1xuICAgIH07XG5cbiAgICBhdWRpby5vbmVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKGF1ZGlvVXJsKTtcbiAgICAgIHJlamVjdChlcnJvcik7XG4gICAgfTtcblxuICAgIGF1ZGlvLnBsYXkoKS5jYXRjaChyZWplY3QpO1xuICB9KTtcbn07XG5cbi8qKlxuICogR2VuZXJhdGUgYW5kIHBsYXkgc3BlZWNoIGZyb20gdGV4dFxuICogQHBhcmFtIHRleHQgLSBUaGUgdGV4dCB0byBjb252ZXJ0IHRvIHNwZWVjaFxuICogQHJldHVybnMgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gYXVkaW8gZmluaXNoZXMgcGxheWluZ1xuICovXG5leHBvcnQgY29uc3Qgc3BlYWtUZXh0ID0gYXN5bmMgKHRleHQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGF1ZGlvQmxvYiA9IGF3YWl0IGdlbmVyYXRlU3BlZWNoKHsgdGV4dCB9KTtcbiAgICBhd2FpdCBwbGF5QXVkaW8oYXVkaW9CbG9iKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc3BlYWtpbmcgdGV4dDpcIiwgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG4vKipcbiAqIENhY2hlIGZvciBzdG9yaW5nIGdlbmVyYXRlZCBhdWRpbyB0byBhdm9pZCByZXBlYXRlZCBBUEkgY2FsbHNcbiAqL1xuY29uc3QgYXVkaW9DYWNoZTogUmVjb3JkPHN0cmluZywgQmxvYj4gPSB7fTtcblxuLyoqXG4gKiBHZW5lcmF0ZSBhbmQgcGxheSBzcGVlY2ggd2l0aCBjYWNoaW5nXG4gKiBAcGFyYW0gdGV4dCAtIFRoZSB0ZXh0IHRvIGNvbnZlcnQgdG8gc3BlZWNoXG4gKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBhdWRpbyBmaW5pc2hlcyBwbGF5aW5nXG4gKi9cbmV4cG9ydCBjb25zdCBzcGVha1RleHRXaXRoQ2FjaGUgPSBhc3luYyAodGV4dDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIHRyeSB7XG4gICAgLy8gQ2hlY2sgaWYgd2UgYWxyZWFkeSBoYXZlIHRoaXMgYXVkaW8gaW4gY2FjaGVcbiAgICBpZiAoIWF1ZGlvQ2FjaGVbdGV4dF0pIHtcbiAgICAgIGF1ZGlvQ2FjaGVbdGV4dF0gPSBhd2FpdCBnZW5lcmF0ZVNwZWVjaCh7IHRleHQgfSk7XG4gICAgfVxuXG4gICAgYXdhaXQgcGxheUF1ZGlvKGF1ZGlvQ2FjaGVbdGV4dF0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzcGVha2luZyB0ZXh0IHdpdGggY2FjaGU6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJFTEVWRU5MQUJTX0NPTkZJRyIsImdlbmVyYXRlU3BlZWNoIiwidGV4dCIsInZvaWNlSWQiLCJJVEFMSUFOX1ZPSUNFX0lEIiwibW9kZWxJZCIsIk1PREVMX0lEIiwic3RhYmlsaXR5IiwiU1RBQklMSVRZIiwic2ltaWxhcml0eUJvb3N0IiwiU0lNSUxBUklUWV9CT09TVCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsImVycm9yTWVzc2FnZSIsImVycm9yRGF0YSIsImpzb24iLCJlcnJvciIsImUiLCJFcnJvciIsImJsb2IiLCJjb25zb2xlIiwicGxheUF1ZGlvIiwiYXVkaW9CbG9iIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJhdWRpb1VybCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImF1ZGlvIiwiQXVkaW8iLCJvbmVuZGVkIiwicmV2b2tlT2JqZWN0VVJMIiwib25lcnJvciIsInBsYXkiLCJjYXRjaCIsInNwZWFrVGV4dCIsImF1ZGlvQ2FjaGUiLCJzcGVha1RleHRXaXRoQ2FjaGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/elevenlabsService.ts\n"));

/***/ })

});